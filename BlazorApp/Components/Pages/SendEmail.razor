@page "/sender"

@using BlazorApp1.Models
@using BlazorApp1.Services
@inject IEmailService EmailService

<h3>SendEmail</h3>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <label for="ReceiverNameInput" class="form-label">Receiver Name</label>
            <input type="text" id="ReceiverNameInput" class="form-control" @bind="receiver" placeholder="Enter reciver name"/>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label for="TitleInput" class="form-label">Title</label>
            <input type="text" id="TitleInput" class="form-control" @bind="title" placeholder="Enter title"/>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label for="EmailInput" class="form-label">Email</label>
            <textarea id="EmailInput" class="form-control" @bind="body" placeholder="Enter email content" rows="5"></textarea>
        </div>
    </div>
</div>
<br/>

<p role="status" class="alert @alertClass">@statusMessage</p>
<button class="btn btn-primary" @onclick="send">Send</button>


@code {
    private string receiver;
    private string title;
    private string body;
    private string alertClass;
    private string statusMessage;

    private async Task send()
    {
        if (string.IsNullOrWhiteSpace(receiver) || string.IsNullOrWhiteSpace(title) || string.IsNullOrWhiteSpace(body))
        {
            statusMessage = "All fields are required.";
            alertClass = "alert-danger";
            await Task.Delay(3000);
            statusMessage = string.Empty;
            return;
        }

        try
        {
            var email = new Email("Rachana Sharma", receiver, title, body, DateTime.Now);
            await EmailService.SendEmail(email);

            receiver = string.Empty;
            title = string.Empty;
            body = string.Empty;

            statusMessage = "Email sent successfully!";
            alertClass = "alert-success";

            await Task.Delay(3000);
            statusMessage = string.Empty;
        }
        catch (Exception e)
        {
            Console.WriteLine($"Error: {e.Message}");
        }
    }

}